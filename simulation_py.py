# -*- coding: utf-8 -*-
"""simulation.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KDrflHkrd0qqCluTmTaAZ56a1WWsSSFH
"""

# simulation.py
import numpy as np

class FluidParticle:
    def __init__(self, x, y, vx, vy, mass=1):
        self.position = np.array([x, y])
        self.velocity = np.array([vx, vy])
        self.mass = mass
        self.color = (0, 0, 255)

    def update_position(self, dt):
        self.position += self.velocity * dt

    def apply_forces(self, force):
        self.velocity += force / self.mass

class FluidSimulation:
    def __init__(self, num_particles, mode='laminar'):
        self.particles = [FluidParticle(x, y, np.random.uniform(-1, 1), np.random.uniform(-1, 1)) for x, y in np.random.rand(num_particles, 2)]
        self.mode = mode
        self.viscosity = 0.1 if mode == 'laminar' else 1.0

    def update_simulation(self, dt):
        for particle in self.particles:
            # Apply viscosity and update position
            particle.apply_forces(-self.viscosity * particle.velocity)
            particle.update_position(dt)

    def switch_mode(self, mode):
        self.mode = mode
        self.viscosity = 0.1 if mode == 'laminar' else 1.0